{"version":3,"sources":["components/page/style.module.css","components/wheel/style.module.css","components/branding/style.module.css","img/branding.svg","components/method-radio/style.module.css","components/wheel/index.js","components/wheel/component.js","components/branding/component.js","components/page/component.js","constants.js","components/method-radio/index.js","redux/actions/app.js","components/method-radio/component.js","App.js","redux/stores/app.js","redux/createStore.js","redux/reducers/reducer.js","index.js"],"names":["module","exports","connect","state","colorMethod","picker","useState","tinycolor","triad","combinations","setCombinations","updateColors","color","newComb","map","curr","toHexString","setColors","handleColorChange","useCallback","hexString","useEffect","on","off","className","styles","wrap","id","style","backgroundColor","Branding","props","imgWrap","data","branding","type","img","Page","setColor","header","logo","nav","bg","container","headline","subHeadline","button","CNST","SUCCESS","dispatch","setColorMethod","payload","handleRadioClick","e","target","value","name","input","defaultChecked","onClick","htmlFor","label","window","addEventListener","path","colorString","filter","undefined","attributes","textContent","includes","getColorArray","document","getElementById","contentDocument","querySelectorAll","forEach","fill","App","app","iro","ColorPicker","width","colors","store","createStore","action","render"],"mappings":"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","file":"static/js/main.ba0dd2b7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__3HbQB\",\"header\":\"style_header__34GId\",\"logo\":\"style_logo__1EI-E\",\"nav\":\"style_nav__uKNVq\",\"bg\":\"style_bg__SgySA\",\"button\":\"style_button__1aT8B\",\"headline\":\"style_headline__30SN0\",\"subHeadline\":\"style_subHeadline__2QMK9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"style_wrap__1P6Ot\",\"combinations\":\"style_combinations__dzUs9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imgWrap\":\"style_imgWrap__2MeVw\",\"img\":\"style_img__3AnrZ\"};","module.exports = __webpack_public_path__ + \"static/media/branding.96be13b9.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"style_wrap__2CVhb\",\"label\":\"style_label__176Vf\",\"input\":\"style_input__3WCRU\"};","import {Wheel} from \"./component\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nexport const mapStateToProps = (state) => {\r\n    return {\r\n        colorMethod: state.colorMethod,\r\n        picker: state.picker\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Wheel);\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport iro from \"@jaames/iro\";\r\nimport styles from \"./style.module.css\"\r\nimport * as tinycolor from \"tinycolor2\"\r\n\r\n\r\nexport const Wheel = ({colorMethod, picker}) => {\r\n    const [combinations, setCombinations] = useState(tinycolor(\"#f00\").triad());\r\n\r\n    const updateColors = (color) => {\r\n        const newComb = tinycolor(color)[colorMethod](3, 5).map(curr => curr.toHexString());\r\n        setCombinations(newComb);\r\n        picker.setColors(newComb);\r\n    };\r\n\r\n    const handleColorChange = useCallback((color) => {\r\n        updateColors(color.hexString);\r\n    }, [colorMethod]);\r\n\r\n    useEffect(() => { //setting up picker on mount\r\n        picker.on('color:change', handleColorChange);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        picker.off('color:change', handleColorChange);\r\n        updateColors(combinations[0]);\r\n        picker.on('color:change', handleColorChange);\r\n    }, [colorMethod]);\r\n\r\n    return (\r\n        <div className={styles.wrap}>\r\n            <div id=\"picker\"/>\r\n            <div className={styles.combinations}>\r\n                <div style={{\r\n                    backgroundColor: combinations[0]\r\n                }}/>\r\n                <div style={{\r\n                    backgroundColor: combinations[1]\r\n                }}/>\r\n                <div style={{\r\n                    backgroundColor: combinations[2]\r\n                }}/>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","import React, {useEffect, useState, useLayoutEffect} from \"react\";\r\nimport branding from \"../../img/branding.svg\";\r\nimport styles from \"./style.module.css\";\r\n\r\n\r\nexport const getColorArray = (path, color) => {\r\n\r\n    path = [...path];\r\n    const colorString = \"fill:\" + color;\r\n    return path.filter(path => {\r\n        if (path.attributes.style !== undefined) {\r\n            return path.attributes.style.textContent.includes(colorString);\r\n        }\r\n\r\n    });\r\n\r\n};\r\n\r\nexport const Branding = (props) => {\r\n    const [firstColor, setFirstColor] = useState([]);\r\n    \r\n    return (\r\n        <div className={styles.imgWrap} id=\"branding\">\r\n            <object data={branding} type=\"image/svg+xml\" className={styles.img} id=\"brandingObj\"/>\r\n        </div>\r\n    )\r\n};\r\n","import React, {useState} from \"react\";\r\nimport styles from \"./style.module.css\";\r\n\r\n\r\nexport const Page = (props) => {\r\n\r\n    const {color, setColor} = useState(\"blue\");\r\n\r\n    const buttonStyle = {\r\n        backgroundColor: \"white\"\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <header className={styles.header}>\r\n                <h1 className={styles.logo}>Logo</h1>\r\n                <nav>\r\n                    <ul className={styles.nav}>\r\n                        <li>Home</li>\r\n                        <li>About</li>\r\n                        <li>Profile</li>\r\n                    </ul>\r\n                </nav>\r\n            </header>\r\n            <section className={styles.bg}>\r\n                <div className={styles.container}>\r\n                    <h2 className={styles.headline}>Applying your colors <br/> to the website</h2>\r\n                    <p className={styles.subHeadline}>This is how your webpage will look like with <br/>\r\n                    chosen color scheme.</p>\r\n                    <button className={styles.button}>Button</button>\r\n                    <button className={styles.button} style={buttonStyle}>Button</button>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n};\r\n","export const CNST = {\r\n    SET_COLOR_METHOD: {\r\n        SUCCESS: \"SET_COLOR_METHOD_SUCCESS\"\r\n    }\r\n}\r\n","import {MethodRadio} from \"./component\";\r\nimport {connect} from \"react-redux\";\r\nimport {setColorMethodAction} from \"../../redux/actions/app\";\r\n\r\nexport const mapDispatchToProps = (dispatch) => ({\r\n    setColorMethod: (props) => dispatch(setColorMethodAction(props)),\r\n});\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(MethodRadio);\r\n","import {CNST} from \"./../../constants\"\r\n\r\n// export function toggleNotificationAction(data) {\r\n//   return {\r\n//     type: CNST.APP.TOGGLE_NOTIFICATION.SUCCESS,\r\n//     payload: data,\r\n//   };\r\n// }\r\nexport function setColorMethodAction (data){\r\n  return{\r\n    type: CNST.SET_COLOR_METHOD.SUCCESS,\r\n    payload: data\r\n  }\r\n}\r\n\r\n","import React, {useCallback} from \"react\";\r\nimport styles from \"./style.module.css\"\r\n\r\nexport const MethodRadio = ({setColorMethod}) => {\r\n    const handleRadioClick = useCallback((e)=>{\r\n        setColorMethod(e.target.value);\r\n    },[setColorMethod]);\r\n\r\n    return (\r\n        <div className={styles.wrap}>\r\n            <input type=\"radio\" value=\"triad\" id=\"triad\" name=\"method\" className={styles.input} defaultChecked onClick={handleRadioClick}/>\r\n            <label htmlFor=\"triad\" className={styles.label}>Triad </label>\r\n            <input type=\"radio\" value=\"monochromatic\" id=\"monochromatic\" name=\"method\" className={styles.input} onClick={handleRadioClick}/>\r\n            <label htmlFor=\"monochromatic\" className={styles.label}> Monochromatic</label>\r\n            <input type=\"radio\" value=\"analogous\" id=\"analogous\" name=\"method\" className={styles.input} onClick={handleRadioClick}/>\r\n            <label htmlFor=\"analogous\" className={styles.label}> Analogous</label>\r\n            <input type=\"radio\" value=\"splitcomplement\" id=\"splitcomplement\" name=\"method\" className={styles.input} onClick={handleRadioClick}/>\r\n            <label htmlFor=\"splitcomplement\" className={styles.label}> Split complementary</label>\r\n        </div>\r\n    )\r\n};\r\n","import React from 'react';\nimport './App.css';\nimport Wheel from \"./components/wheel\";\nimport {Branding, getColorArray} from \"./components/branding/component\";\nimport {Page} from \"./components/page/component\";\nimport MethodRadio from \"./components/method-radio\";\n\n\nwindow.addEventListener(\"load\", () => {\n    const obj = document.getElementById(\"brandingObj\");\n    const svg = obj.contentDocument;\n    let allNodes = svg.querySelectorAll(\"path\");\n    let t = getColorArray(allNodes, \"#f57b26\");\n    t.forEach(color => {\n        color.style.fill = \"red\";\n    })\n});\n\n\nfunction App() {\n\n\n    return (\n        <div>\n            <div className=\"app\">\n                <Branding/>\n                <div>\n                    <MethodRadio/>\n                    <Wheel/>\n                </div>\n\n            </div>\n            <Page/>\n        </div>\n\n    );\n}\n\nexport default App;\n","import iro from \"@jaames/iro\";\r\n\r\nconst app = {\r\n    colorMethod: \"triad\",\r\n    picker: new iro.ColorPicker(\"#picker\", {\r\n        width: 400,\r\n        colors: [\"#f00\", \"#0f0\", \"#00f\"]\r\n    })\r\n};\r\n\r\nexport default app;\r\n","import { createStore } from \"redux\";\r\nimport app from \"./stores/app\"\r\nimport reducer from \"./reducers/reducer\";\r\n\r\nconst store = createStore(reducer, app);\r\n\r\n\r\nexport default store;\r\n","import app from \"../stores/app\";\r\nimport {CNST} from \"../../constants\";\r\n\r\nexport default function (state = app, action) {\r\n  switch (action.type) {\r\n    case CNST.SET_COLOR_METHOD.SUCCESS:\r\n      return {\r\n        ...state,\r\n        colorMethod: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from 'react';\nimport { render } from 'react-dom'\nimport App from './App';\nimport store from \"./redux/createStore\";\nimport {Provider} from \"react-redux\";\n\n\nrender(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}